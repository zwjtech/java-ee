<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

       <!-- 配置自动扫描的包 -->
       <context:component-scan base-package="Spring4_hibernate"/>

       <!--导入资源文件-->
       <context:property-placeholder location="classpath:Spring4_hibernate/db.properties"/>
       <!--配置C3P0数据源-->
       <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
              <property name="user" value="${jdbc.user}"/>
              <property name="password" value="${jdbc.password}"/>
              <property name="driverClass" value="${jdbc.driverClass}"/>
              <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
              <property name="initialPoolSize" value="${jdbc.initPoolSize}"/>
              <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
       </bean>

       <!-- 配置 Hibernate 的 SessionFactory 实例: 通过 Spring 提供的 LocalSessionFactoryBean 进行配置 -->
       <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">              <!-- 1、配置数据源属性 -->
              <property name="dataSource" ref="dataSource"/>
              <!-- 2、配置 utils 配置文件的位置及名称 -->

              <property name="configLocation" value="classpath:Spring4_hibernate/hibernate.cfg.xml"/>

              <!-- 使用 hibernateProperties 属相来配置 Hibernate 原生的属性 -->
              <!--<property name="hibernateProperties">-->
                     <!--<props>-->
                            <!--<prop key="utils.dialect">org.utils.dialect.MySQL5InnoDBDialect</prop>-->
                            <!--<prop key="utils.show_sql">true</prop>-->
                            <!--<prop key="utils.format_sql">true</prop>-->
                            <!--<prop key="utils.hbm2ddl.auto">update</prop>-->
                     <!--</props>-->
              <!--</property>-->
              <!-- 3、配置 utils 映射文件的位置及名称, 可以使用通配符 -->
              <property name="mappingLocations"
                        value="classpath:Spring4_hibernate/*.hbm.xml"/>

       </bean>

       <!-- 配置 Spring 的声明式事务 -->
       <!-- 1. 配置事务管理器 -->
       <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
              <property name="sessionFactory" ref="sessionFactory"/>
       </bean>

       <!-- 2. 配置事务属性, 需要事务管理器 -->
       <tx:advice id="txAdvice" transaction-manager="transactionManager">
              <tx:attributes>
                     <tx:method name="get*" read-only="true"/>
                     <!--事务的传播行为,这样购买成功的不会回滚-->
                     <tx:method name="purchase" propagation="REQUIRES_NEW"/>
                     <tx:method name="*"/>
              </tx:attributes>
       </tx:advice>

       <!-- 3. 配置事务切点, 并把切点和事务属性关联起来 -->
       <aop:config>
              <aop:pointcut expression="execution(* Spring4_hibernate.service.*.*(..))" id="txPointcut"/>
              <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
       </aop:config>
</beans>